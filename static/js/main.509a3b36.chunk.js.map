{"version":3,"sources":["components/DIalogs/Dialogs.module.css","components/DIalogs/DialogItem/DialogItem.module.css","components/Users/Users.module.css","components/Users/Loader.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/DIalogs/MessageItem/MessageItem.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Navbar/Navbar.module.css","reportWebVitals.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Navbar/Navbar.js","components/Music/Music.js","components/News/News.js","components/Settings/Settings.js","components/DIalogs/DialogItem/DialogItem.js","components/DIalogs/MessageItem/MessageItem.js","components/DIalogs/Dialogs.js","components/DIalogs/DialogsContainer.js","static/img/no-avatar.png","components/Users/Users.js","components/common/preloader/preloader.js","components/Users/UsersContainer.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UPDATE_NEW_POST","ADD_POST","SET_USER_PROFILE","initialState","PostsData","id","message","NewPost","profile","profileReducer","state","action","type","newPost","newText","ADD_MESSAGE","UPDATE_NEW_MESSAGE","DialogsData","name","MessagesData","NewMessage","dialogsReducer","newMessage","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","map","user","userId","followed","totalCount","SET_USER_DATA","email","login","isAuth","authReducer","data","redusers","combineReducers","ProfilePage","DialogsPage","UsersPage","auth","store","createStore","Navbar","className","style","nav","item","to","activeClassName","active","friends","Music","props","News","Settings","DialogItem","dialog","MessageItem","Dialogs","newDialogsData","newMessagesData","newMessageText","React","createRef","dialogs","dialogItems","messages","ref","onChange","mes","target","value","changeMessage","onClick","addMessage","DialogsContainer","connect","dispatch","changeMessageActionCreator","Users","pagesCount","Math","ceil","pages","i","push","page","changePage","photo","src","photos","small","userPhoto","axios","delete","withCredentials","headers","response","resultCode","unfollow","post","follow","status","Preloader","loader","preloader","spinner","UsersContainer","toggleIsFetching","setCurrentPage","get","setUsers","items","this","setTotalUsersCount","Component","ProfileInfo","oblozhka","large","aboutMe","Post","MyPosts","newPostsData","newPostElement","text","current","changePost","addPost","reverse","MyPostContainer","changePostActionCreator","Profile","MyPostsContainer","ProfileContainer","match","params","setUserProfile","WithUrlDataContainerComponent","withRouter","Header","header","loginBlock","HeaderContainer","SetAuthUserData","App","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.509a3b36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__gFleu\",\"dialogItems\":\"Dialogs_dialogItems__35Qvr\",\"messages\":\"Dialogs_messages__3jGC3\",\"active\":\"Dialogs_active__oWX9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__uYfsi\",\"active\":\"DialogItem_active__18CaZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__REC5o\",\"currentPage\":\"Users_currentPage__Rx7z7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Loader_preloader__fYzbT\",\"spinner\":\"Loader_spinner__AThDK\",\"spin\":\"Loader_spin__6ev1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3k4G7\",\"message\":\"Post_message__z_7fi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__32p_P\",\"loginBlock\":\"Header_loginBlock__1IWZa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessageItem_message__YBdBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"oblozhka\":\"ProfileInfo_oblozhka__3LpDv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__Q-6Y2\",\"item\":\"Navbar_item__2iWJE\",\"active\":\"Navbar_active__ps-OT\",\"friends\":\"Navbar_friends__26zMo\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const UPDATE_NEW_POST = 'UPDATE-NEW-POST'\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\r\n\r\nlet initialState = {\r\n    PostsData: [\r\n        {id: 1, message: 'hello everyone'},\r\n        {id: 2, message: 'its my blog'},\r\n        {id: 3, message: 'like twitter'},\r\n        {id: 4, message: 'but better'},\r\n    ],\r\n    NewPost: '',\r\n    profile: null,\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.NewPost\r\n            }\r\n            return  {\r\n                ...state,\r\n                PostsData: [...state.PostsData, newPost],\r\n                NewPost: ''\r\n            }\r\n        case  UPDATE_NEW_POST:\r\n            return  {\r\n                ...state,\r\n                NewPost: action.newText}\r\n        case  SET_USER_PROFILE:\r\n            return  {\r\n                ...state,\r\n                profile: action.profile}\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const changePostActionCreator = (text) => ({type: UPDATE_NEW_POST, newText: text})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n","const ADD_MESSAGE = 'ADD-MESSAGE'\r\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE'\r\n\r\nlet initialState = {\r\n    DialogsData: [\r\n        {id: 1, name: 'Alex'},\r\n        {id: 2, name: 'Igor'},\r\n        {id: 3, name: 'Sasha'}\r\n    ],\r\n    MessagesData: [\r\n        {id: 1, message: 'hi'},\r\n        {id: 2, message: 'ha'},\r\n        {id: 3, message: 'ho'},\r\n    ],\r\n    NewMessage: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 4,\r\n                message: state.NewMessage\r\n            }\r\n            return  {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, newMessage],\r\n                NewMessage: ''\r\n            }\r\n        case  UPDATE_NEW_MESSAGE:\r\n            return  {\r\n                ...state,\r\n                NewMessage: action.newMessage\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\nexport default dialogsReducer\r\n\r\nexport const addMessageActionCreator = () => ({type: ADD_MESSAGE})\r\nexport const changeMessageActionCreator = (message) => ({type: UPDATE_NEW_MESSAGE, newMessage: message})\r\n","const FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case  UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case SET_USERS:{\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE:{\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT:{\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING:{\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default usersReducer\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n","const SET_USER_DATA = 'SET-USER-DATA'\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer\r\n\r\nexport const SetAuthUserData = (userId, email, login) => ({\r\n    type: SET_USER_DATA,\r\n    data: {userId, email, login}\r\n})\r\n\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n        ProfilePage: profileReducer,\r\n        DialogsPage: dialogsReducer,\r\n        UsersPage: usersReducer,\r\n        auth: authReducer\r\n\r\n    }\r\n)\r\n\r\n\r\nlet store = createStore(redusers)\r\n\r\n\r\nexport default store\r\n","import React from \"react\";\r\nimport style from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}><NavLink to='/profile' activeClassName={style.active}>Profile</NavLink></div>\r\n            <div className={style.item}><NavLink to='/dialogs' activeClassName={style.active}>Messages</NavLink></div>\r\n            <div className={style.item}><NavLink to='/news' activeClassName={style.active}>News</NavLink></div>\r\n            <div className={style.item}><NavLink to='/music' activeClassName={style.active}>Music</NavLink></div>\r\n            <div className={style.item}><NavLink to='/settings' activeClassName={style.active}>Settings</NavLink></div>\r\n            <div className={style.item}><NavLink to='/users' activeClassName={style.active}>Find user</NavLink></div>\r\n            <div className={`${style.item} ${style.friends}`}><NavLink to='/friends' activeClassName={style.active}>Friends</NavLink></div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from \"react\";\r\nimport style from './Music.module.css'\r\n\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Music\r\n","import React from \"react\";\r\nimport style from './News.module.css'\r\n\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from \"react\";\r\nimport style from './Settings.module.css'\r\n\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","import React from \"react\";\r\nimport style from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={style.dialog}>\r\n            <NavLink to={`/dialogs/id${props.id}`} activeClassName={style.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem\r\n","import React from \"react\";\r\nimport style from './MessageItem.module.css'\r\n\r\n\r\n\r\n\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={style.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MessageItem\r\n","import React from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let newDialogsData = props.DialogsPage.DialogsData.map(user => <DialogItem id={user.id} key={user.id} name={user.name}/>)\r\n    let newMessagesData = props.DialogsPage.MessagesData.map(message => <MessageItem key={message.id} message={message.message}/>)\r\n    let newMessageText = React.createRef()\r\n    const addMessage = () => {\r\n        props.addMessage()\r\n    }\r\n    const onChangeMessage = (mes) => {\r\n        let message = mes.target.value\r\n        props.changeMessage(message)\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogItems}>\r\n                {newDialogsData}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {newMessagesData}\r\n                <textarea ref={newMessageText}\r\n                          onChange={onChangeMessage}\r\n                          value={props.DialogsPage.NewMessage}/>\r\n                <button onClick={addMessage}>new message</button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n","import React from \"react\";\r\nimport {addMessageActionCreator, changeMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        DialogsPage: state.DialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeMessage: (message) => {\r\n            dispatch(changeMessageActionCreator(message))\r\n        },\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\nexport default DialogsContainer\r\n","export default __webpack_public_path__ + \"static/media/no-avatar.57b4e4a6.png\";","import React from \"react\";\r\nimport style from \"./Users.module.css\";\r\nimport userPhoto from \"../../static/img/no-avatar.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return (\r\n        <div>\r\n            {pages.map(page => {\r\n                return (\r\n                    <span className={props.currentPage === page && style.currentPage} onClick={() => {\r\n                        props.changePage(page)\r\n                    }}>{page}</span>\r\n\r\n                )\r\n            })}\r\n            {props.users.map((user) => <div key={user.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img className={style.photo}\r\n                             src={user.photos.small != null ? user.photos.small : userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed ?\r\n                            <button onClick={() => {\r\n                                axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${user.id}`,\r\n                                    {\r\n                                        withCredentials: true,\r\n                                        headers: {\r\n                                            'API-KEY': '758acc3e-254f-40a8-9d09-25e8036572bf'\r\n                                        }\r\n                                    })\r\n                                    .then(response => {\r\n                                        if (response.data.resultCode == 0) {\r\n                                            props.unfollow(user.id)\r\n                                        }\r\n                                    })\r\n\r\n\r\n                            }}>\r\n                                Unfollow\r\n                            </button> :\r\n                            <button onClick={() => {\r\n                                axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${user.id}`,\r\n                                    {}, {\r\n                                        withCredentials: true,\r\n                                        headers: {\r\n                                            'API-KEY': '758acc3e-254f-40a8-9d09-25e8036572bf'\r\n                                        }\r\n                                    })\r\n                                    .then(response => {\r\n                                        if (response.data.resultCode == 0) {\r\n                                            props.follow(user.id)\r\n                                        }\r\n                                    })\r\n\r\n                            }}>\r\n                                Follow\r\n                            </button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'user.location.country'}</div>\r\n                        <div>{'user.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Users\r\n","import loader from \"../../Users/Loader.module.css\";\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div className={loader.preloader}>\r\n            <div className={loader.spinner}></div>\r\n        </div>)\r\n}\r\nexport default Preloader\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFetching,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/preloader\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`,\r\n            {withCredentials: true})\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.data.items)\r\n                this.props.setTotalUsersCount(response.data.totalCount)\r\n            })\r\n    }\r\n\r\n    changePage = (page) => {\r\n        this.props.toggleIsFetching(true)\r\n        this.props.setCurrentPage(page)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${page}&count=${this.props.pageSize}`, {withCredentials: true})\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items)\r\n            })\r\n        this.props.toggleIsFetching(false)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   changePage={this.changePage}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}/>\r\n        </>\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.UsersPage.users,\r\n        pageSize: state.UsersPage.pageSize,\r\n        totalUsersCount: state.UsersPage.totalUsersCount,\r\n        currentPage: state.UsersPage.currentPage,\r\n        isFetching: state.UsersPage.isFetching,\r\n    }\r\n}\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPageAC(currentPage))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        },\r\n    }\r\n}*/\r\n\r\nexport default connect(mapStateToProps,\r\n    {follow, unfollow, setUsers, setCurrentPage,\r\n        setTotalUsersCount, toggleIsFetching,})(UsersContainer)\r\n\r\n\r\n","import React from \"react\";\r\nimport style from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/preloader/preloader\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (props.profile == null){\r\n        return(\r\n        <Preloader/>)\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={style.oblozhka} src='https://oren-m7.ru/images/400/DSC100498782.jpg'/>\r\n            </div>\r\n            <div>\r\n                <img src={props.profile.photos.large}/>\r\n            </div>\r\n            <div>{props.profile.aboutMe}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo\r\n","import React from \"react\";\r\nimport style from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <div><img\r\n                src='https://avatars.mds.yandex.net/get-zen_doc/105853/pub_5cfe815283e84200af3e43e5_5cfe839285b5e500afe2eeb1/scale_1200'/>\r\n            </div>\r\n            <div className={style.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React from \"react\";\r\nimport style from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let newPostsData = props.ProfilePage.PostsData.map(post => <Post key={post.id} message={post.message}/>)\r\n    let newPostElement = React.createRef()\r\n    const addPost = () => {\r\n        props.addPost()\r\n    }\r\n    const onChangePost = () => {\r\n        let text = newPostElement.current.value;\r\n        props.changePost(text)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea onChange={onChangePost} ref={newPostElement} value={props.ProfilePage.NewPost}/>\r\n                <div>\r\n                    <button onClick={addPost}>new post</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {newPostsData.reverse()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts\r\n\r\n","import React from \"react\";\r\nimport {addPostActionCreator, changePostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        ProfilePage: state.ProfilePage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePost: (text) => {\r\n            dispatch(changePostActionCreator(text))\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostContainer\r\n\r\n","import React from \"react\";\r\nimport style from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}/>\r\n            <MyPostsContainer store={props.store}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from \"react\";\r\nimport style from './Profile.module.css'\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (userId == null){\r\n            userId = 14216\r\n        }\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n            .then(response => {\r\n               // this.props.toggleIsFetching(false)\r\n                this.props.setUserProfile(response.data)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.ProfilePage.profile\r\n})\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps,{setUserProfile})(WithUrlDataContainerComponent)\r\n","import React from \"react\";\r\nimport style from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header className={style.header}>\r\n            <img src='https://w7.pngwing.com/pngs/649/377/png-transparent-vkontakte-font-awesome-computer-software-computer-icons-model-logo-twitter-hd-black-группа-вконтакт.png'/>\r\n            <div className={style.loginBlock}>\r\n                {props.isAuth ? props.email\r\n               : <NavLink to={'/login'}>login</NavLink>}\r\n            </div>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Header from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {SetAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`,{\r\n            withCredentials: true\r\n        })\r\n            .then(response => {\r\n                if (response.data.resultCode === 0){\r\n                    let {id, email, login} = response.data.data\r\n                    this.props.SetAuthUserData(id, email, login)\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    email: state.auth.email\r\n})\r\n\r\nexport default connect(mapStateToProps,{\r\n    SetAuthUserData,\r\n})(HeaderContainer)\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {Route} from \"react-router-dom\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/DIalogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n\n\nconst App = (props) => {\n    return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/settings' component={Settings}/>\n                    <Route path='/dialogs'\n                           render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer />}/>\n                    <Route path='/users' render={() => <UsersContainer />}/>\n                </div>\n            </div>\n    );\n}\n\n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}